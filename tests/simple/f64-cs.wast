;; Test all the f64 operators on major boundary values and all special
;; values (except comparison and bitwise operators, which are tested in
;; f64_bitwise.wast and f64_cmp.wast).

(module
  (func (export "add") (param $x f64) (param $y f64) (result f64) (f64.add (local.get $x) (local.get $y)))
  (func (export "sub") (param $x f64) (param $y f64) (result f64) (f64.sub (local.get $x) (local.get $y)))
  (func (export "mul") (param $x f64) (param $y f64) (result f64) (f64.mul (local.get $x) (local.get $y)))
  (func (export "div") (param $x f64) (param $y f64) (result f64) (f64.div (local.get $x) (local.get $y)))
  (func (export "sqrt") (param $x f64) (result f64) (f64.sqrt (local.get $x)))
  (func (export "min") (param $x f64) (param $y f64) (result f64) (f64.min (local.get $x) (local.get $y)))
  (func (export "max") (param $x f64) (param $y f64) (result f64) (f64.max (local.get $x) (local.get $y)))
  (func (export "ceil") (param $x f64) (result f64) (f64.ceil (local.get $x)))
  (func (export "floor") (param $x f64) (result f64) (f64.floor (local.get $x)))
  (func (export "trunc") (param $x f64) (result f64) (f64.trunc (local.get $x)))
  (func (export "nearest") (param $x f64) (result f64) (f64.nearest (local.get $x)))
)

(assert_return (invoke "add" (f64.const -0.000000e+00) (f64.const -0.000000e+00)) (f64.const -0.000000e+00))
(assert_return (invoke "add" (f64.const -0.000000e+00) (f64.const -2.225074e-308)) (f64.const -2.225074e-308))
(assert_return (invoke "add" (f64.const 5.000000e-01) (f64.const -Infinity)) (f64.const -Infinity))
(assert_return (invoke "add" (f64.const 5.000000e-01) (f64.const Infinity)) (f64.const Infinity))

(assert_return (invoke "sub" (f64.const -0.000000e+00) (f64.const -0.000000e+00)) (f64.const 0.000000e+00))
(assert_return (invoke "sub" (f64.const 0.000000e+00) (f64.const 1.797693e+308)) (f64.const -1.797693e+308))
(assert_return (invoke "sub" (f64.const -0.000000e+00) (f64.const -Infinity)) (f64.const Infinity))
(assert_return (invoke "sub" (f64.const -0.000000e+00) (f64.const Infinity)) (f64.const -Infinity))
(assert_return (invoke "sub" (f64.const 5.000000e-01) (f64.const -1.797693e+308)) (f64.const 1.797693e+308))
(assert_return (invoke "sub" (f64.const 5.000000e-01) (f64.const 1.797693e+308)) (f64.const -1.797693e+308))
(assert_return (invoke "sub" (f64.const -5.000000e-01) (f64.const -Infinity)) (f64.const Infinity))
(assert_return (invoke "sub" (f64.const 1.000000e+00) (f64.const 1.797693e+308)) (f64.const -1.797693e+308))
(assert_return (invoke "sub" (f64.const Infinity) (f64.const 1.000000e+00)) (f64.const Infinity))
(assert_return (invoke "sub" (f64.const -Infinity) (f64.const -6.283185e+00)) (f64.const -Infinity))
(assert_return (invoke "mul" (f64.const -4.940656e-324) (f64.const -0.000000e+00)) (f64.const 0.000000e+00))
(assert_return (invoke "mul" (f64.const 2.225074e-308) (f64.const -2.225074e-308)) (f64.const -0.000000e+00))
(assert_return (invoke "mul" (f64.const 2.225074e-308) (f64.const 2.225074e-308)) (f64.const 0.000000e+00))
(assert_return (invoke "mul" (f64.const -2.225074e-308) (f64.const -5.000000e-01)) (f64.const 1.112537e-308))
(assert_return (invoke "mul" (f64.const -2.225074e-308) (f64.const 5.000000e-01)) (f64.const -1.112537e-308))
(assert_return (invoke "mul" (f64.const 2.225074e-308) (f64.const -5.000000e-01)) (f64.const -1.112537e-308))
(assert_return (invoke "mul" (f64.const 5.000000e-01) (f64.const -5.000000e-01)) (f64.const -2.500000e-01))
(assert_return (invoke "div" (f64.const -0.000000e+00) (f64.const -4.940656e-324)) (f64.const 0.000000e+00))
(assert_return (invoke "div" (f64.const 0.000000e+00) (f64.const 5.000000e-01)) (f64.const 0.000000e+00))
(assert_return (invoke "div" (f64.const -0.000000e+00) (f64.const -1.000000e+00)) (f64.const 0.000000e+00))
(assert_return (invoke "div" (f64.const -0.000000e+00) (f64.const 1.000000e+00)) (f64.const -0.000000e+00))
(assert_return (invoke "div" (f64.const 0.000000e+00) (f64.const Infinity)) (f64.const 0.000000e+00))
;; (assert_return_canonical_nan (invoke "div" (f64.const -0x0p+0) (f64.const -nan)))
;; (assert_return_arithmetic_nan (invoke "div" (f64.const -0x0p+0) (f64.const -nan:0x4000000000000)))
;; (assert_return_canonical_nan (invoke "div" (f64.const -0x0p+0) (f64.const nan)))
;; (assert_return_arithmetic_nan (invoke "div" (f64.const -0x0p+0) (f64.const nan:0x4000000000000)))
;; (assert_return_canonical_nan (invoke "div" (f64.const 0x0p+0) (f64.const -nan)))
;; (assert_return_arithmetic_nan (invoke "div" (f64.const 0x0p+0) (f64.const -nan:0x4000000000000)))
;; (assert_return_canonical_nan (invoke "div" (f64.const 0x0p+0) (f64.const nan)))
;; (assert_return_arithmetic_nan (invoke "div" (f64.const 0x0p+0) (f64.const nan:0x4000000000000)))
(assert_return (invoke "div" (f64.const -4.940656e-308) (f64.const -0.000000e+00)) (f64.const Infinity))
(assert_return (invoke "div" (f64.const 4.940656e-308) (f64.const -0.000000e+00)) (f64.const -Infinity))
(assert_return (invoke "div" (f64.const 2.225074e-308) (f64.const 0.000000e+00)) (f64.const Infinity))
(assert_return (invoke "div" (f64.const -2.225074e-308) (f64.const -4.940656e-324)) (f64.const 4.503600e+15))
(assert_return (invoke "div" (f64.const 2.225074e-308) (f64.const Infinity)) (f64.const 0.000000e+00))
(assert_return (invoke "min" (f64.const 0.000000e+00) (f64.const -1.797693e+308)) (f64.const -1.797693e+308))
(assert_return (invoke "min" (f64.const 0.000000e+00) (f64.const 1.797693e+308)) (f64.const 0.000000e+00))
(assert_return (invoke "min" (f64.const -0.000000e+00) (f64.const -Infinity)) (f64.const -Infinity))
(assert_return (invoke "min" (f64.const -4.940656e-324) (f64.const -1.797693e+308)) (f64.const -1.797693e+308))
(assert_return (invoke "max" (f64.const 0.000000e+00) (f64.const 2.225074e-308)) (f64.const 2.225074e-308))
(assert_return (invoke "max" (f64.const -0.000000e+00) (f64.const -5.000000e-01)) (f64.const -0.000000e+00))
(assert_return (invoke "max" (f64.const -0.000000e+00) (f64.const 5.000000e-01)) (f64.const 5.000000e-01))
(assert_return (invoke "max" (f64.const 0.000000e+00) (f64.const -5.000000e-01)) (f64.const 0.000000e+00))
(assert_return (invoke "max" (f64.const 0.000000e+00) (f64.const 5.000000e-01)) (f64.const 5.000000e-01))
(assert_return (invoke "max" (f64.const -0.000000e+00) (f64.const -1.000000e+00)) (f64.const -0.000000e+00))
(assert_return (invoke "max" (f64.const -0.000000e+00) (f64.const 1.000000e+00)) (f64.const 1.000000e+00))
(assert_return (invoke "max" (f64.const 0.000000e+00) (f64.const -1.000000e+00)) (f64.const 0.000000e+00))
(assert_return (invoke "max" (f64.const 0.000000e+00) (f64.const 1.000000e+00)) (f64.const 1.000000e+00))
(assert_return (invoke "max" (f64.const 1.000000e+00) (f64.const 1.797693e+308)) (f64.const 1.797693e+308))
(assert_return (invoke "max" (f64.const -1.000000e+00) (f64.const -Infinity)) (f64.const -1.000000e+00))
(assert_return (invoke "max" (f64.const -1.000000e+00) (f64.const Infinity)) (f64.const Infinity))
;; (assert_return_canonical_nan (invoke "sqrt" (f64.const -0x1p-1)))
(assert_return (invoke "sqrt" (f64.const 5.000000e-01)) (f64.const 7.071068e-01))
;; (assert_return_canonical_nan (invoke "sqrt" (f64.const -0x1p+0)))
(assert_return (invoke "sqrt" (f64.const 1.000000e+00)) (f64.const 1.000000e+00))
;; (assert_return_canonical_nan (invoke "sqrt" (f64.const -0x1.921fb54442d18p+2)))
(assert_return (invoke "floor" (f64.const -0.000000e+00)) (f64.const -0.000000e+00))
(assert_return (invoke "floor" (f64.const 0.000000e+00)) (f64.const 0.000000e+00))
(assert_return (invoke "floor" (f64.const -4.940656e-324)) (f64.const -1.000000e+00))
(assert_return (invoke "floor" (f64.const 4.940656e-324)) (f64.const 0.000000e+00))
(assert_return (invoke "floor" (f64.const -2.225074e-308)) (f64.const -1.000000e+00))
(assert_return (invoke "floor" (f64.const 2.225074e-308)) (f64.const 0.000000e+00))
(assert_return (invoke "floor" (f64.const -5.000000e-01)) (f64.const -1.000000e+00))
(assert_return (invoke "floor" (f64.const 5.000000e-01)) (f64.const 0.000000e+00))
(assert_return (invoke "floor" (f64.const -1.000000e+00)) (f64.const -1.000000e+00))
(assert_return (invoke "floor" (f64.const 1.000000e+00)) (f64.const 1.000000e+00))
(assert_return (invoke "floor" (f64.const -6.283185e+00)) (f64.const -7.000000e+00))
(assert_return (invoke "floor" (f64.const 6.283185e+00)) (f64.const 6.000000e+00))
(assert_return (invoke "floor" (f64.const -1.797693e+308)) (f64.const -1.797693e+308))
(assert_return (invoke "floor" (f64.const 1.797693e+308)) (f64.const 1.797693e+308))
(assert_return (invoke "floor" (f64.const -Infinity)) (f64.const -Infinity))
(assert_return (invoke "floor" (f64.const Infinity)) (f64.const Infinity))
(assert_return (invoke "ceil" (f64.const -0.000000e+00)) (f64.const -0.000000e+00))
(assert_return (invoke "ceil" (f64.const 0.000000e+00)) (f64.const 0.000000e+00))
(assert_return (invoke "ceil" (f64.const -4.940656e-324)) (f64.const -0.000000e+00))
(assert_return (invoke "ceil" (f64.const 4.940656e-324)) (f64.const 1.000000e+00))
(assert_return (invoke "ceil" (f64.const -2.225074e-308)) (f64.const -0.000000e+00))
(assert_return (invoke "ceil" (f64.const 2.225074e-308)) (f64.const 1.000000e+00))
(assert_return (invoke "ceil" (f64.const -5.000000e-01)) (f64.const -0.000000e+00))
(assert_return (invoke "ceil" (f64.const 5.000000e-01)) (f64.const 1.000000e+00))
(assert_return (invoke "ceil" (f64.const -1.000000e+00)) (f64.const -1.000000e+00))
(assert_return (invoke "ceil" (f64.const 1.000000e+00)) (f64.const 1.000000e+00))
(assert_return (invoke "ceil" (f64.const -6.283185e+00)) (f64.const -6.000000e+00))
(assert_return (invoke "ceil" (f64.const 6.283185e+00)) (f64.const 7.000000e+00))
(assert_return (invoke "ceil" (f64.const -1.797693e+308)) (f64.const -1.797693e+308))
(assert_return (invoke "ceil" (f64.const 1.797693e+308)) (f64.const 1.797693e+308))
(assert_return (invoke "ceil" (f64.const -Infinity)) (f64.const -Infinity))
(assert_return (invoke "ceil" (f64.const Infinity)) (f64.const Infinity))
;; (assert_return_canonical_nan (invoke "ceil" (f64.const -nan)))
;; (assert_return_arithmetic_nan (invoke "ceil" (f64.const -nan:0x4000000000000)))
;; (assert_return_canonical_nan (invoke "ceil" (f64.const nan)))
;; (assert_return_arithmetic_nan (invoke "ceil" (f64.const nan:0x4000000000000)))
(assert_return (invoke "trunc" (f64.const -0.000000e+00)) (f64.const -0.000000e+00))
(assert_return (invoke "trunc" (f64.const 0.000000e+00)) (f64.const 0.000000e+00))
(assert_return (invoke "trunc" (f64.const -4.940656e-324)) (f64.const -0.000000e+00))
(assert_return (invoke "trunc" (f64.const 4.940656e-324)) (f64.const 0.000000e+00))
(assert_return (invoke "trunc" (f64.const -2.225074e-308)) (f64.const -0.000000e+00))
(assert_return (invoke "trunc" (f64.const 2.225074e-308)) (f64.const 0.000000e+00))
(assert_return (invoke "trunc" (f64.const -5.000000e-01)) (f64.const -0.000000e+00))
(assert_return (invoke "trunc" (f64.const 5.000000e-01)) (f64.const 0.000000e+00))
(assert_return (invoke "trunc" (f64.const -1.000000e+00)) (f64.const -1.000000e+00))
(assert_return (invoke "trunc" (f64.const 1.000000e+00)) (f64.const 1.000000e+00))
(assert_return (invoke "trunc" (f64.const -6.283185e+00)) (f64.const -6.000000e+00))
(assert_return (invoke "trunc" (f64.const 6.283185e+00)) (f64.const 6.000000e+00))
(assert_return (invoke "trunc" (f64.const -1.797693e+308)) (f64.const -1.797693e+308))
(assert_return (invoke "trunc" (f64.const 1.797693e+308)) (f64.const 1.797693e+308))
(assert_return (invoke "trunc" (f64.const -Infinity)) (f64.const -Infinity))
(assert_return (invoke "trunc" (f64.const Infinity)) (f64.const Infinity))
;; (assert_return_canonical_nan (invoke "trunc" (f64.const -nan)))
;; (assert_return_arithmetic_nan (invoke "trunc" (f64.const -nan:0x4000000000000)))
;; (assert_return_canonical_nan (invoke "trunc" (f64.const nan)))
;; (assert_return_arithmetic_nan (invoke "trunc" (f64.const nan:0x4000000000000)))
(assert_return (invoke "nearest" (f64.const -0.000000e+00)) (f64.const -0.000000e+00))
(assert_return (invoke "nearest" (f64.const 0.000000e+00)) (f64.const 0.000000e+00))
(assert_return (invoke "nearest" (f64.const -4.940656e-324)) (f64.const -0.000000e+00))
(assert_return (invoke "nearest" (f64.const 4.940656e-324)) (f64.const 0.000000e+00))
(assert_return (invoke "nearest" (f64.const -2.225074e-308)) (f64.const -0.000000e+00))
(assert_return (invoke "nearest" (f64.const 2.225074e-308)) (f64.const 0.000000e+00))
(assert_return (invoke "nearest" (f64.const -5.000000e-01)) (f64.const -0.000000e+00))
(assert_return (invoke "nearest" (f64.const 5.000000e-01)) (f64.const 0.000000e+00))
(assert_return (invoke "nearest" (f64.const -1.000000e+00)) (f64.const -1.000000e+00))
(assert_return (invoke "nearest" (f64.const 1.000000e+00)) (f64.const 1.000000e+00))
(assert_return (invoke "nearest" (f64.const -6.283185e+00)) (f64.const -6.000000e+00))
(assert_return (invoke "nearest" (f64.const 6.283185e+00)) (f64.const 6.000000e+00))
(assert_return (invoke "nearest" (f64.const -1.797693e+308)) (f64.const -1.797693e+308))
(assert_return (invoke "nearest" (f64.const 1.797693e+308)) (f64.const 1.797693e+308))
(assert_return (invoke "nearest" (f64.const -Infinity)) (f64.const -Infinity))
(assert_return (invoke "nearest" (f64.const Infinity)) (f64.const Infinity))

#clearConfig
